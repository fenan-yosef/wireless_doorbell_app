import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:smart_doorbell_app/models/doorbell_event.dart';
import 'package:smart_doorbell_app/services/firestore_service.dart';

class HardwareModeScreen extends StatelessWidget {
  const HardwareModeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final firestoreService = Provider.of<FirestoreService>(context, listen: false);

    return Scaffold(
      appBar: AppBar(
        title: const Text('Hardware Mode'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Status: Connected', // Placeholder status
              style: TextStyle(fontSize: 18),
            ),
            const SizedBox(height: 30),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                padding: const EdgeInsets.symmetric(horizontal: 40, vertical: 20),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () async {
                print('Ring Doorbell button pressed in Hardware Mode');
                final newEvent = DoorbellEvent(
                  // ID will be auto-generated by Firestore, so we pass a placeholder or handle it in the model/service
                  // For this model structure, we don't pass an ID when creating new.
                  // The service method `addDoorbellEvent` has been adjusted for this.
                  id: '', // Placeholder, Firestore will generate this.
                  timestamp: DateTime.now(),
                  details: 'Ring from Hardware Mode',
                  // userId: 'hardware_device_001' // Optional: if hardware has a specific ID
                );
                try {
                  await firestoreService.addDoorbellEvent(newEvent);
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(content: Text('Doorbell event sent!')),
                  );
                  print('Doorbell event added successfully from Hardware Mode.');
                } catch (e) {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Error sending event: $e')),
                  );
                  print('Error adding doorbell event from Hardware Mode: $e');
                }
              },
              child: const Text('Ring Doorbell'),
            ),
          ],
        ),
      ),
    );
  }
}
